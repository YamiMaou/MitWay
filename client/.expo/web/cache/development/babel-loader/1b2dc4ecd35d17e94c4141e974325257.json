{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\MitWay\\\\completo\\\\client\\\\src\\\\pages\\\\Empresas\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BlockIcon from '@material-ui/icons/Block';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport LDataGrid from \"../../components/List/datagrid\";\nimport { setSnackbar } from \"../../actions/appActions\";\nimport { getApiClients, deleteApiDrivers } from \"../../providers/api\";\nimport { InputCpf, stringCpf } from \"../../providers/masks\";\nimport { IconButton, Toolbar } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport { DataGrid, RowsProp, ColDef, CheckCircleIcon } from '@material-ui/data-grid';\n\nfunction BlockDialog(props) {\n  var _React$useState = React.useState(props.open),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(undefined),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      justfy = _React$useState4[0],\n      setjustfy = _React$useState4[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var send = function send() {\n    return _regeneratorRuntime.async(function send$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(deleteApiDrivers(props.id));\n\n          case 2:\n            props.handle(props.active);\n            props.handleClose();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Exclus\\xE3o de Empresa\"), React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Confirma a exclus\\xE3o do registro selecionado?\")), React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    onClick: props.handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"N\\xC3O\"), React.createElement(Button, {\n    onClick: send,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"SIM\"))));\n}\n\nvar Clients = function (_Component) {\n  _inherits(Clients, _Component);\n\n  var _super = _createSuper(Clients);\n\n  function Clients() {\n    var _this;\n\n    _classCallCheck(this, Clients);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      clients: [],\n      pageRequest: {},\n      blockDialog: {\n        open: false,\n        id: undefined,\n        active: 0,\n        handle: undefined\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Clients, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$clients$d,\n          _this2 = this;\n\n      var authData = JSON.parse(localStorage.getItem(\"user\"));\n      var classes = {\n        root: {\n          height: window.innerHeight - 150\n        },\n        media: {\n          height: 140\n        }\n      };\n      var rows = (_this$state$clients$d = this.state.clients.data) != null ? _this$state$clients$d : [];\n      var columns = [{\n        field: 'cnpj_cpf',\n        headerName: 'CNPJ',\n        flex: 0.7,\n        valueFormatter: function valueFormatter(params) {\n          return stringCpf(params.value);\n        }\n      }, {\n        field: 'fantasy_name',\n        headerName: 'Nome',\n        flex: 2\n      }, {\n        field: 'company_name',\n        headerName: 'Tipo de CNH',\n        flex: 1\n      }, {\n        field: 'id',\n        headerName: 'Ações',\n        flex: 1,\n        renderCell: function renderCell(params, row) {\n          return React.createElement(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }\n          }, React.createElement(Link, {\n            to: \"/empresas/\" + params.value,\n            style: {\n              textDecoration: 'none'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }\n          }, React.createElement(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"small\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }\n          }, React.createElement(EditIcon, {\n            fontSize: \"small\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }\n          }))));\n        }\n      }];\n      var flexBasis = '25%';\n      var filter = [{\n        column: 'cnpj_cpf',\n        label: 'CPF/CNPJ',\n        type: 'text',\n        flexBasis: flexBasis\n      }, {\n        column: 'company_name',\n        label: 'Nome',\n        type: 'text',\n        flexBasis: flexBasis\n      }, {\n        column: 'fantasy_name',\n        label: 'Nome',\n        type: 'text',\n        flexBasis: flexBasis\n      }];\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, React.createElement(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        style: {\n          flexGrow: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }, React.createElement(HomeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }), \"  \", React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 43\n        }\n      }, \"Empresas\")))), React.createElement(LDataGrid, {\n        rows: rows,\n        columns: columns,\n        filterInputs: filter,\n        pageRequest: function pageRequest(params) {\n          if (params.active !== undefined) {\n            params.active = params.active == \"Ativo\" ? 1 : 0;\n          }\n\n          _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n            pageRequest: params\n          }));\n\n          return getApiClients(params);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }), React.createElement(BlockDialog, {\n        open: this.state.blockDialog.open,\n        id: this.state.blockDialog.id,\n        handle: this.state.blockDialog.handle,\n        active: this.state.blockDialog.active,\n        handleClose: function handleClose() {\n          _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n            blockDialog: {\n              open: false,\n              id: undefined\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }));\n    }\n  }]);\n\n  return Clients;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar,\n    getApiClients: getApiClients\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Clients);","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/MitWay/completo/client/src/pages/Empresas/index.js"],"names":["React","Component","Fragment","connect","bindActionCreators","AppBar","Button","HomeIcon","BlockIcon","EditIcon","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Typography","LDataGrid","setSnackbar","getApiClients","deleteApiDrivers","InputCpf","stringCpf","IconButton","Toolbar","Add","Link","DataGrid","RowsProp","ColDef","CheckCircleIcon","BlockDialog","props","useState","open","setOpen","undefined","justfy","setjustfy","handleClose","send","id","handle","active","Clients","state","clients","pageRequest","blockDialog","authData","JSON","parse","localStorage","getItem","classes","root","height","window","innerHeight","media","rows","data","columns","field","headerName","flex","valueFormatter","params","value","renderCell","row","textDecoration","flexBasis","filter","column","label","type","padding","marginTop","marginBottom","flexGrow","setState","mapStateToProps","store","session","authReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n//\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n//\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n//\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LDataGrid from '../../components/List/datagrid';\r\n//\r\nimport { setSnackbar } from '../../actions/appActions'\r\nimport { getApiClients, deleteApiDrivers } from '../../providers/api'\r\n\r\nimport {InputCpf, stringCpf} from '../../providers/masks'\r\nimport { IconButton, Toolbar } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { DataGrid, RowsProp, ColDef, CheckCircleIcon } from '@material-ui/data-grid';\r\n\r\nfunction BlockDialog(props) {\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [justfy, setjustfy] = React.useState(undefined);\r\n    \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n    \r\n    const send = async () => {\r\n        await deleteApiDrivers( props.id);\r\n        props.handle(props.active)\r\n        props.handleClose();\r\n    }\r\n    return (\r\n      <div>\r\n        <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n          <DialogTitle id=\"form-dialog-title\">Exclusão de Empresa</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n                Confirma a exclusão do registro selecionado?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={props.handleClose} color=\"primary\">\r\n              NÃO\r\n            </Button>\r\n            <Button onClick={send} color=\"primary\">\r\n              SIM\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\nclass Clients extends Component {\r\n    state = {\r\n        clients: [],\r\n        pageRequest: {},\r\n        blockDialog: {open: false, id: undefined,active: 0, handle: undefined},\r\n       \r\n    }\r\n    \r\n    async componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        const authData = JSON.parse(localStorage.getItem(\"user\"));\r\n        const classes = {\r\n            root: {\r\n                //maxWidth: 345,\r\n                height: window.innerHeight -150\r\n            },\r\n            media: {\r\n                height: 140,\r\n            },\r\n        }\r\n        const rows : RowsProp = this.state.clients.data ?? [];\r\n        const columns: ColDef[] = [\r\n            { field: 'cnpj_cpf', headerName: 'CNPJ', flex: 0.7,\r\n                valueFormatter: (params: ValueFormatterParams) => {\r\n                    return stringCpf(params.value);\r\n                }\r\n            },\r\n            { field: 'fantasy_name', headerName: 'Nome',flex: 2 },\r\n            { field: 'company_name', headerName: 'Tipo de CNH', flex: 1 },\r\n            {\r\n                field: 'id',\r\n                headerName: 'Ações',\r\n                flex: 1,\r\n                renderCell: (params: ValueFormatterParams, row: RowIdGetter) => (\r\n                        \r\n                    <div>\r\n                    <Link to={`/empresas/${params.value}`} style={{textDecoration: 'none'}} >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                        >\r\n                            <EditIcon fontSize=\"small\" />\r\n                        </Button>\r\n                    </Link>\r\n                      \r\n                    </div>\r\n                  ),\r\n            },\r\n        ];\r\n        const flexBasis = '25%';\r\n        const filter = [\r\n            \r\n            { column: 'cnpj_cpf', label: 'CPF/CNPJ', type: 'text', \r\n            //mask: InputCpf, \r\n            flexBasis },\r\n            { column: 'company_name', label: 'Nome', type: 'text', flexBasis },\r\n            { column: 'fantasy_name', label: 'Nome', type: 'text', flexBasis },\r\n            //{ column: 'created_at', label: 'Data', type: 'date' },\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10}}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" style={{flexGrow: 1}}>\r\n                            <HomeIcon />  <span>Empresas</span>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                    \r\n                </AppBar>\r\n                    <LDataGrid rows={rows} columns={columns} filterInputs={filter} \r\n                    pageRequest={\r\n                        (params) => {\r\n                            if(params.active !== undefined){\r\n                                params.active = params.active == \"Ativo\" ? 1: 0;\r\n                            }\r\n                            this.setState({...this.state, pageRequest: params})\r\n                            return getApiClients(params)\r\n                    }} />\r\n                        <BlockDialog \r\n                            open={this.state.blockDialog.open} \r\n                            id={this.state.blockDialog.id}\r\n                            handle={this.state.blockDialog.handle}\r\n                            active={this.state.blockDialog.active}\r\n                            handleClose={() => {\r\n                                this.setState({...this.state, blockDialog: { open : false, id: undefined }})\r\n                            }}\r\n                            />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar, getApiClients}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Clients)\r\n"]},"metadata":{},"sourceType":"module"}