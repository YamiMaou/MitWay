{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\MitWay\\\\completo\\\\client\\\\src\\\\pages\\\\Empresas\\\\create\\\\cadastro.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport LForms from \"../../../components/Forms\";\nimport { setSnackbar } from \"../../../actions/appActions\";\nimport { postApiClients, getApiDownloadFile, getAddressByCepla } from \"../../../providers/api\";\nimport { validaEmail, validaCPFCNPJ, setAddressByCepla } from \"../../../providers/commonMethods\";\nimport { InputCep, InputCpf, InputPhone } from \"../../../providers/masks\";\nimport { Redirect } from 'react-router-dom';\nimport { withSnackbar } from 'notistack';\n\nvar CreateClients = function (_Component) {\n  _inherits(CreateClients, _Component);\n\n  var _super = _createSuper(CreateClients);\n\n  function CreateClients() {\n    var _this;\n\n    _classCallCheck(this, CreateClients);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      cadastros: [],\n      states: [],\n      type: 0\n    };\n    return _this;\n  }\n\n  _createClass(CreateClients, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var closeSnack = function closeSnack(event, reason) {\n        if (reason === 'clickaway') {\n          return;\n        }\n\n        _this2.props.setSnackbar({\n          open: false,\n          message: \"\"\n        });\n      };\n\n      var postType = function postType() {\n        return _this2.state.type == 0 ? {\n          title: 'Dados Básicos',\n          fields: [{\n            column: 'cpf_cnpj',\n            label: 'CNPJ',\n            type: 'text',\n            mask: \"cpf_cnpj\",\n            validate: {\n              min: 11,\n              number: true,\n              required: true\n            },\n            validateHandler: validaCPFCNPJ,\n            flexBasis: '12%',\n            helperText: \"o valor digitado é inválido\"\n          }, {\n            column: 'company_name',\n            label: 'Razão Social',\n            type: 'text',\n            validate: {\n              max: 50,\n              required: true\n            },\n            flexBasis: flexBasis\n          }, {\n            column: 'fantasy_name',\n            label: 'Nome Fantasia',\n            type: 'text',\n            validate: {\n              max: 50,\n              required: true\n            },\n            flexBasis: flexBasis\n          }, {\n            column: 'email',\n            label: 'E-mail',\n            type: 'email',\n            validate: {\n              max: 100\n            },\n            validateHandler: validaEmail,\n            flexBasis: flexBasis\n          }, {\n            column: 'phone',\n            label: 'Telefone',\n            type: 'text',\n            mask: InputPhone,\n            validate: {\n              max: 15,\n              required: true\n            },\n            flexBasis: flexBasis\n          }, {\n            column: 'mob_phone',\n            label: 'Celular',\n            type: 'text',\n            mask: InputPhone,\n            validate: {\n              max: 15,\n              required: true\n            },\n            flexBasis: flexBasis\n          }, {\n            column: 'file_cnh',\n            label: 'Anexar CNH',\n            type: 'file',\n            flexBasis: flexBasis,\n            style: {\n              maxWidth: '180'\n            }\n          }]\n        } : {\n          title: 'Dados Básicos',\n          fields: [{\n            column: 'cpf_cnpj',\n            label: 'CPF',\n            type: 'text',\n            mask: InputCpf,\n            validate: {\n              min: 11,\n              number: true,\n              required: true\n            },\n            validateHandler: validaCpf,\n            flexBasis: '12%',\n            helperText: \"o valor digitado é inválido\"\n          }, {\n            column: 'cnh',\n            label: 'Tipo de CNH',\n            type: 'select',\n            validate: {\n              required: true\n            },\n            values: [\"A\", \"B\", \"C\", \"D\", \"E\", \"AB\"],\n            flexBasis: flexBasis\n          }, {\n            column: 'fullname',\n            label: 'Nome',\n            type: 'text',\n            validate: {\n              max: 50,\n              required: true\n            },\n            flexBasis: flexBasis\n          }, {\n            column: 'mob_phone',\n            label: 'Celular',\n            type: 'text',\n            mask: InputPhone,\n            validate: {\n              max: 15,\n              required: true\n            },\n            flexBasis: flexBasis\n          }, {\n            column: 'file_cnh',\n            label: 'Anexar CNH',\n            type: 'file',\n            flexBasis: flexBasis,\n            style: {\n              maxWidth: '180'\n            }\n          }, {\n            column: 'phone',\n            label: 'Telefone',\n            type: 'text',\n            mask: InputPhone,\n            validate: {\n              max: 15,\n              required: true\n            },\n            flexBasis: flexBasis\n          }, {\n            column: 'email',\n            label: 'E-mail',\n            type: 'email',\n            validate: {\n              max: 100\n            },\n            validateHandler: validaEmail,\n            flexBasis: flexBasis\n          }, {\n            column: 'birthdate',\n            label: 'Data de nascimento',\n            type: 'date',\n            validate: {\n              required: true\n            },\n            validateHandler: isFutureData,\n            flexBasis: flexBasis,\n            style: {\n              maxWidth: '210px'\n            }\n          }, {\n            column: 'file_crlv',\n            label: 'Anexar CRLV',\n            type: 'file',\n            flexBasis: flexBasis,\n            style: {\n              maxWidth: '180'\n            }\n          }]\n        };\n      };\n\n      var request = function request(data) {\n        var response, _response$data, errors, messages;\n\n        return _regeneratorRuntime.async(function request$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.props.setSnackbar({\n                  open: true,\n                  message: \"Validando Dados, Aguarde ...\"\n                });\n\n                _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n                  loading: true\n                }));\n\n                _context2.next = 4;\n                return _regeneratorRuntime.awrap(postApiClients(data));\n\n              case 4:\n                response = _context2.sent;\n\n                if (response.data.success) {\n                  _this2.props.setSnackbar({\n                    open: true,\n                    message: response.data.message\n                  });\n\n                  _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n                    loading: false\n                  }));\n                } else {\n                  console.log(response);\n                  errors = (_response$data = response.data) != null ? _response$data : undefined;\n                  messages = '';\n\n                  if (errors !== undefined && errors.data !== undefined && errors.data.response !== undefined && errors.data.response.data.errors !== undefined) {\n                    Object.keys(errors.response.data.errors).map(function (err) {\n                      console.log(err);\n                      var field = err == \"file\" ? \"Anexo\" : err;\n                      messages += \"O campo \" + field.toUpperCase() + \" \" + errors.response.data.errors[err][0] + \" \\n\";\n                    });\n                  } else {\n                    messages = 'Houve um problema em sua requisição!';\n                  }\n\n                  _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n                    loading: false\n                  }));\n\n                  _this2.props.setSnackbar({\n                    open: true,\n                    message: messages\n                  });\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      var validateFields = function validateFields(fields, values) {\n        var campo = undefined;\n        fields.reverse().map(function (v, k) {\n          v.fields.reverse().map(function (v1, k1) {\n            var value = values[v1.column];\n\n            if (v1.validate !== undefined) {\n              if (v1.validate.number !== undefined) {\n                if (/^[-]?\\d+$/.test(value) == false) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 somente n\\xFAmeros \"\n                };\n              }\n\n              if (v1.validate.max !== undefined) {\n                if (value.length > v1.validate.max) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \", tamanho m\\xE1ximo de \" + v1.validate.max + \" caracteres ex\\xEAdido\"\n                };\n              }\n\n              if (v1.validate.min !== undefined) {\n                if (value.length < v1.validate.min) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \", tamanho minimo de \" + v1.validate.min + \" caracteres.\"\n                };\n              }\n\n              if (v1.validate.required !== undefined) {\n                if (value.length == 0) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 obrigat\\xF3rio\"\n                };\n              }\n            }\n\n            if (value == \"Selecione\") {\n              campo = {\n                id: v1.column,\n                message: \"O Campo \" + v1.label + \" \\xE9 inv\\xE1lido \"\n              };\n            }\n\n            if (v1.validateHandler !== undefined) {\n              if (v1.validateHandler(value) == false) campo = {\n                id: v1.column,\n                message: \"O Campo \" + v1.label + \"  \\xE9 inv\\xE1lido \"\n              };\n            }\n          });\n        });\n        campo !== undefined ? _this2.props.setSnackbar({\n          open: true,\n          message: campo.message\n        }) : '';\n        return campo === undefined ? true : false;\n      };\n\n      var flexBasis = '22%';\n      var forms = [{\n        title: 'Dados Básicos',\n        fields: [{\n          column: 'cpf_cnpj',\n          label: 'CNPJ',\n          type: 'text',\n          mask: \"cpf_cnpj\",\n          validate: {\n            min: 11,\n            number: true,\n            required: true\n          },\n          validateHandler: validaCPFCNPJ,\n          flexBasis: '12%',\n          helperText: \"o valor digitado é inválido\"\n        }, {\n          column: 'company_name',\n          label: 'Razão Social',\n          type: 'text',\n          validate: {\n            max: 50,\n            required: true\n          },\n          flexBasis: flexBasis\n        }, {\n          column: 'fantasy_name',\n          label: 'Nome Fantasia',\n          type: 'text',\n          validate: {\n            max: 50,\n            required: true\n          },\n          flexBasis: flexBasis\n        }, {\n          column: 'email',\n          label: 'E-mail',\n          type: 'email',\n          validate: {\n            max: 100\n          },\n          validateHandler: validaEmail,\n          flexBasis: flexBasis\n        }, {\n          column: 'phone',\n          label: 'Telefone',\n          type: 'text',\n          mask: InputPhone,\n          validate: {\n            max: 15,\n            required: true\n          },\n          flexBasis: flexBasis\n        }, {\n          column: 'mob_phone',\n          label: 'Celular',\n          type: 'text',\n          mask: InputPhone,\n          validate: {\n            max: 15,\n            required: true\n          },\n          flexBasis: flexBasis\n        }, {\n          column: 'file_cnh',\n          label: 'Anexar CNH',\n          type: 'file',\n          flexBasis: flexBasis,\n          style: {\n            maxWidth: '180'\n          }\n        }]\n      }, {\n        id: 'addr',\n        title: 'Endereço',\n        fields: [{\n          column: 'zipcode',\n          label: 'CEP',\n          type: 'text',\n          mask: InputCep,\n          handle: setAddressByCepla,\n          validate: {\n            max: 9,\n            required: true\n          },\n          flexBasis: '9%'\n        }, {\n          column: 'street',\n          label: 'Endereço',\n          validate: {\n            max: 100,\n            required: true\n          },\n          type: 'text',\n          flexBasis: flexBasis\n        }, {\n          column: 'number',\n          label: 'Número',\n          type: 'number',\n          validate: {\n            number: true,\n            required: true\n          },\n          flexBasis: '9%'\n        }, {\n          column: 'additional',\n          label: 'Complemento',\n          type: 'text',\n          flexBasis: '10%'\n        }, {\n          column: 'uf',\n          label: 'Estado',\n          type: 'select',\n          values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\n          flexBasis: flexBasis,\n          flexGrow: 2,\n          style: {\n            minWidth: \"192px\"\n          }\n        }, {\n          column: 'city',\n          label: 'Cidade',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: flexBasis\n        }]\n      }];\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, React.createElement(HomeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }), \"  \", React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 39\n        }\n      }, \"Cadastro / Empresa\"))), React.createElement(Paper, {\n        square: true,\n        style: {\n          width: 320,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }, React.createElement(Tabs, {\n        value: this.state.type,\n        indicatorColor: \"primary\",\n        onChange: function onChange(e) {\n          _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n            type: e.target.value\n          }));\n\n          postType();\n        },\n        \"aria-label\": \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }, React.createElement(Tab, {\n        style: {\n          background: this.state.type == 0 ? '#132e79' : '#ccc',\n          color: this.state.type == 1 ? '#132e79' : 'white'\n        },\n        label: \"Empresa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }), React.createElement(Tab, {\n        style: {\n          background: this.state.type == 1 ? '#132e79' : '#ccc',\n          color: this.state.type == 0 ? '#132e79' : 'white'\n        },\n        label: \"Profissional\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }))), React.createElement(LForms, {\n        forms: forms,\n        request: request,\n        validate: function validate(values) {\n          return validateFields(forms, values);\n        },\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return CreateClients;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data,\n    snackbar: store.appReducer.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateClients));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/MitWay/completo/client/src/pages/Empresas/create/cadastro.js"],"names":["React","Component","Fragment","connect","bindActionCreators","withRouter","AppBar","Paper","HomeIcon","Typography","Snackbar","Tabs","Tab","LForms","setSnackbar","postApiClients","getApiDownloadFile","getAddressByCepla","validaEmail","validaCPFCNPJ","setAddressByCepla","InputCep","InputCpf","InputPhone","Redirect","withSnackbar","CreateClients","state","cadastros","states","type","closeSnack","event","reason","props","open","message","postType","title","fields","column","label","mask","validate","min","number","required","validateHandler","flexBasis","helperText","max","style","maxWidth","validaCpf","values","isFutureData","request","data","setState","loading","response","success","console","log","errors","undefined","messages","Object","keys","map","err","field","toUpperCase","validateFields","campo","reverse","v","k","v1","k1","value","test","id","length","forms","handle","flexGrow","minWidth","padding","marginTop","marginBottom","width","e","target","background","color","mapStateToProps","store","session","authReducer","snackbar","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport LForms from '../../../components/Forms';\r\n//\r\nimport { setSnackbar } from '../../../actions/appActions'\r\nimport { postApiClients, getApiDownloadFile, getAddressByCepla } from '../../../providers/api'\r\nimport { validaEmail, validaCPFCNPJ, setAddressByCepla } from '../../../providers/commonMethods'\r\n\r\nimport { InputCep, InputCpf, InputPhone } from '../../../providers/masks'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { withSnackbar  } from 'notistack';\r\nclass CreateClients extends Component {\r\n    \r\n    state = {\r\n        cadastros: [],\r\n        states: [],\r\n        type: 0\r\n    }\r\n    async componentDidMount() {\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n         // to use snackbar Provider\r\n        const closeSnack = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n                return;\r\n            }\r\n            this.props.setSnackbar({ open: false, message: \"\" });\r\n        };\r\n\r\n        const postType = () => {\r\n            return this.state.type == 0 ? {\r\n                title: 'Dados Básicos',\r\n                fields: [\r\n                    { column: 'cpf_cnpj', label: 'CNPJ', type: 'text', mask: \"cpf_cnpj\", validate: {min: 11, number: true, required: true}, validateHandler: validaCPFCNPJ, flexBasis: '12%', helperText: \"o valor digitado é inválido\" },\r\n                    { column: 'company_name', label: 'Razão Social', type: 'text', validate: {max: 50, required: true}, flexBasis },\r\n                    { column: 'fantasy_name', label: 'Nome Fantasia', type: 'text', validate: {max: 50, required: true}, flexBasis },\r\n                    { column: 'email', label: 'E-mail', type: 'email', validate: { max: 100 }, validateHandler: validaEmail, flexBasis},\r\n                    { column: 'phone', label: 'Telefone', type: 'text', mask: InputPhone, validate: { max: 15, required: true }, flexBasis},\r\n                    { column: 'mob_phone', label: 'Celular', type: 'text', mask: InputPhone, validate: { max: 15, required: true }, flexBasis},\r\n                    { column: 'file_cnh', label: 'Anexar CNH', type: 'file', flexBasis, style:{maxWidth: '180'} },\r\n                    \r\n                    //{ column: 'created_at', label: 'Data', type: 'date' },\r\n                ]\r\n            } : \r\n            {\r\n                title: 'Dados Básicos',\r\n                fields: [\r\n                    { column: 'cpf_cnpj', label: 'CPF', type: 'text', mask: InputCpf, validate: {min: 11, number: true, required: true},validateHandler: validaCpf, flexBasis: '12%', helperText: \"o valor digitado é inválido\" },\r\n                    { column: 'cnh', label: 'Tipo de CNH', type: 'select', validate: {required: true}, \r\n                    values:[\r\n                        \"A\", \"B\", \"C\", \"D\", \"E\", \"AB\"\r\n                    ],flexBasis },\r\n                    { column: 'fullname', label: 'Nome', type: 'text', validate: {max: 50, required: true}, flexBasis },\r\n                    { column: 'mob_phone', label: 'Celular', type: 'text', mask: InputPhone, validate: { max: 15, required: true }, flexBasis},\r\n                    { column: 'file_cnh', label: 'Anexar CNH', type: 'file', flexBasis, style:{maxWidth: '180'} },\r\n                    { column: 'phone', label: 'Telefone', type: 'text', mask: InputPhone, validate: { max: 15, required: true }, flexBasis},\r\n                    { column: 'email', label: 'E-mail', type: 'email', validate: { max: 100 }, validateHandler: validaEmail, flexBasis},\r\n                    { column: 'birthdate', label: 'Data de nascimento', type: 'date', validate: {required: true}, validateHandler: isFutureData, flexBasis, style:{maxWidth: '210px'} },\r\n                    //\r\n                    \r\n                    { column: 'file_crlv', label: 'Anexar CRLV', type: 'file', flexBasis, style:{maxWidth: '180'} },\r\n                    \r\n                    //{ column: 'created_at', label: 'Data', type: 'date' },\r\n                ]\r\n            }\r\n        }\r\n        \r\n        const request = async (data) => {\r\n            this.props.setSnackbar({ open: true, message: \"Validando Dados, Aguarde ...\", });\r\n            this.setState({ ...this.state, loading: true });\r\n            //data = Object.assign({},state.addresses,data);\r\n            //data = Object.assign({},state.contacts,data);\r\n            //data = Object.assign({},state,data);\r\n            //delete data.addresses;\r\n           // delete data.contacts;\r\n\r\n            let response = await postApiClients(data);\r\n            //console.log(response);\r\n            if (response.data.success) {\r\n                //this.props.enqueueSnackbar( response.data.message, { variant: 'success' });\r\n                this.props.setSnackbar({ open: true, message: response.data.message });\r\n                this.setState({ ...this.state, loading: false });\r\n                //this.props.history.goBack();\r\n            } else {\r\n                console.log(response)\r\n                let errors = response.data ?? undefined;\r\n\r\n                //let { errors } = response.data.error.response.data ?? {error: undefined}\r\n                let messages = '';\r\n                if(errors !== undefined && errors.data !== undefined && errors.data.response !== undefined  && errors.data.response.data.errors !== undefined){\r\n                    Object.keys(errors.response.data.errors).map(err => {\r\n                        console.log(err);\r\n                        let field = err == \"file\" ? \"Anexo\" : err\r\n                        messages += `O campo ${field.toUpperCase()} ${errors.response.data.errors[err][0]} \\n`;\r\n                    })\r\n                } else{\r\n                    messages = 'Houve um problema em sua requisição!'\r\n                }\r\n                //response.data.error.response.data.errors\r\n                //this.props.enqueueSnackbar( message, { variant: 'error' });\r\n                this.setState({ ...this.state, loading: false });\r\n                this.props.setSnackbar({ open: true, message: messages});\r\n            }\r\n\r\n        }\r\n        const validateFields = (fields, values) => {\r\n            //console.log(fields);\r\n            let campo = undefined;\r\n            fields.reverse().map((v,k) => {\r\n                v.fields.reverse().map((v1,k1)=>{\r\n                        let value = values[v1.column];\r\n                        if (v1.validate !== undefined) {\r\n                            if (v1.validate.number !== undefined) {\r\n                                if (/^[-]?\\d+$/.test(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é somente números ` }\r\n                            }\r\n\r\n                            if (v1.validate.max !== undefined) {\r\n                                if (value.length > v1.validate.max)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}, tamanho máximo de ${v1.validate.max} caracteres exêdido` };\r\n                            }\r\n\r\n                            if (v1.validate.min !== undefined) {\r\n                                if (value.length < v1.validate.min)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}, tamanho minimo de ${v1.validate.min} caracteres.` };\r\n                            }\r\n\r\n                            if (v1.validate.required !== undefined) {\r\n                                if (value.length == 0)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label} é obrigatório` };\r\n                            }\r\n                        }\r\n                        if(value == \"Selecione\"){\r\n                            campo = {id: v1.column, message: `O Campo ${v1.label} é inválido ` }\r\n                        }\r\n                        if(v1.validateHandler !== undefined){\r\n                            if (v1.validateHandler(value) == false)\r\n                                    campo = {id: v1.column, message: `O Campo ${v1.label}  é inválido ` }\r\n                        }\r\n                    })\r\n                })\r\n                //console.log(campo)\r\n                campo !== undefined ? this.props.setSnackbar({ open: true, message: campo.message}) : '';\r\n\r\n                return campo === undefined ? true : false\r\n        }\r\n        const flexBasis = '22%';\r\n        let forms = [\r\n            {\r\n                title: 'Dados Básicos',\r\n                fields: [\r\n                    { column: 'cpf_cnpj', label: 'CNPJ', type: 'text', mask: \"cpf_cnpj\", validate: {min: 11, number: true, required: true}, validateHandler: validaCPFCNPJ, flexBasis: '12%', helperText: \"o valor digitado é inválido\" },\r\n                    { column: 'company_name', label: 'Razão Social', type: 'text', validate: {max: 50, required: true}, flexBasis },\r\n                    { column: 'fantasy_name', label: 'Nome Fantasia', type: 'text', validate: {max: 50, required: true}, flexBasis },\r\n                    { column: 'email', label: 'E-mail', type: 'email', validate: { max: 100 }, validateHandler: validaEmail, flexBasis},\r\n                    { column: 'phone', label: 'Telefone', type: 'text', mask: InputPhone, validate: { max: 15, required: true }, flexBasis},\r\n                    { column: 'mob_phone', label: 'Celular', type: 'text', mask: InputPhone, validate: { max: 15, required: true }, flexBasis},\r\n                    { column: 'file_cnh', label: 'Anexar CNH', type: 'file', flexBasis, style:{maxWidth: '180'} },\r\n                    \r\n                    //{ column: 'created_at', label: 'Data', type: 'date' },\r\n                ]\r\n            },\r\n            {\r\n                id: 'addr',\r\n                title: 'Endereço',\r\n                //flexFlow: 'row no-wrap',\r\n                //json: \"address\",\r\n                fields: [\r\n                    { column: 'zipcode', label: 'CEP', type: 'text', mask: InputCep, handle: setAddressByCepla ,validate: { max: 9, required: true }, flexBasis: '9%'},\r\n                    { column: 'street', label: 'Endereço', validate: { max: 100, required: true }, type: 'text', flexBasis},\r\n                    { column: 'number', label: 'Número', type: 'number', validate: { number: true, required: true }, flexBasis: '9%'},\r\n                    { column: 'additional', label: 'Complemento', type: 'text', flexBasis: '10%'},\r\n                    {\r\n                        column: 'uf', label: 'Estado', type: 'select',\r\n                        values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\r\n                        flexBasis, flexGrow: 2, style: { minWidth: \"192px\" }\r\n                    },\r\n                    { column: 'city', label: 'Cidade', type: 'text', validate: { max: 100, required: true }, flexBasis },\r\n                ]\r\n            },\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10 }}>\r\n                    <Typography variant=\"h6\">\r\n                        <HomeIcon />  <span>Cadastro / Empresa</span>\r\n                    </Typography>\r\n                </AppBar>\r\n                <Paper square style={{width: 320, marginBottom: 10}}>\r\n                <Tabs\r\n                    value={this.state.type}\r\n                    indicatorColor=\"primary\"\r\n                    //textColor=\"primary\"\r\n                    onChange={(e)=> {\r\n                        this.setState({...this.state, type: e.target.value})\r\n                        postType();\r\n                    }}\r\n                    aria-label=\"Login\"\r\n                >\r\n                    <Tab style={{background: this.state.type == 0 ?'#132e79': '#ccc', color: this.state.type == 1 ?'#132e79': 'white'}} label=\"Empresa\" />\r\n                    <Tab style={{background: this.state.type == 1 ?'#132e79': '#ccc', color: this.state.type == 0 ?'#132e79': 'white'}} label=\"Profissional\" />\r\n                </Tabs>\r\n                </Paper>\r\n                <LForms forms={forms}\r\n                    request={request} \r\n                    validate={(values) => { return validateFields(forms,values)}}\r\n                    loading={this.state.loading}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n    snackbar: store.appReducer.snackbar\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar }, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateClients))\r\n"]},"metadata":{},"sourceType":"module"}