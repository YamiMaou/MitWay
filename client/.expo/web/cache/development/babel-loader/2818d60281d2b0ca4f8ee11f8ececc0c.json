{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Maou\\\\Documents\\\\Projetos\\\\CLIENTES\\\\RNF\\\\MitWay\\\\completo\\\\client\\\\src\\\\pages\\\\Motoristas\\\\edit\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LForms from \"../../../components/Forms\";\nimport { setSnackbar } from \"../../../actions/appActions\";\nimport { putApiDrivers, getAddressByCepla, getApiDrivers } from \"../../../providers/api\";\nimport { validaEmail, validaCpf, stringToaddDate, isFutureData } from \"../../../providers/commonMethods\";\nimport { InputCep, InputCpf, InputPhone } from \"../../../providers/masks\";\nimport { Redirect } from 'react-router-dom';\nimport { withSnackbar } from 'notistack';\n\nvar EditDrivers = function (_Component) {\n  _inherits(EditDrivers, _Component);\n\n  var _super = _createSuper(EditDrivers);\n\n  function EditDrivers() {\n    var _this;\n\n    _classCallCheck(this, EditDrivers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      driver: undefined,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(EditDrivers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var driver;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getApiDrivers({}, this.props.match.params.id));\n\n            case 2:\n              driver = _context.sent;\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                driver: driver\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var closeSnack = function closeSnack(event, reason) {\n        if (reason === 'clickaway') {\n          return;\n        }\n\n        _this2.props.setSnackbar({\n          open: false,\n          message: \"\"\n        });\n      };\n\n      var _request = function request(state, data) {\n        var response, _response$data, errors, messages;\n\n        return _regeneratorRuntime.async(function request$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n                  loading: true\n                }));\n\n                _this2.props.setSnackbar({\n                  open: true,\n                  message: \"Validando Dados, Aguarde ...\"\n                });\n\n                data = _extends({}, state.addresses, data);\n                data = _extends({}, state.contacts, data);\n                data = _extends({}, state, data);\n                delete data.addresses;\n                delete data.contacts;\n                _context2.next = 9;\n                return _regeneratorRuntime.awrap(putApiDrivers(_this2.props.match.params.id, data));\n\n              case 9:\n                response = _context2.sent;\n\n                if (response.data.success) {\n                  _this2.props.setSnackbar({\n                    open: true,\n                    message: response.data.message\n                  });\n\n                  _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n                    loading: false\n                  }));\n                } else {\n                  errors = (_response$data = response.data) != null ? _response$data : undefined;\n                  messages = '';\n                  console.log(errors);\n\n                  if (errors !== undefined && errors.data !== undefined && errors.data.response !== undefined && errors.data.response.data.errors !== undefined) {\n                    Object.keys(errors.response.data.errors).map(function (err) {\n                      console.log(err);\n                      var field = err == \"file\" ? \"Anexo\" : err;\n                      messages += \"O campo \" + field.toUpperCase() + \" \" + errors.response.data.errors[err][0] + \" \\n\";\n                    });\n                  } else {\n                    messages = 'Houve um problema em sua requisição!';\n                  }\n\n                  _this2.setState(_objectSpread(_objectSpread({}, _this2.state), {}, {\n                    loading: false\n                  }));\n\n                  _this2.props.setSnackbar({\n                    open: true,\n                    messages: messages\n                  });\n                }\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      var validateFields = function validateFields(fields, values) {\n        var campo = undefined;\n        fields.reverse().map(function (v, k) {\n          v.fields.reverse().map(function (v1, k1) {\n            if (values[v1.column] !== undefined) {\n              var value = values[v1.column];\n\n              if (v1.validate !== undefined) {\n                if (v1.validate.number !== undefined) {\n                  if (/^[-]?\\d+$/.test(value) == false) campo = {\n                    id: v1.column,\n                    message: \"O Campo \" + v1.label + \" \\xE9 somente n\\xFAmeros \"\n                  };\n                }\n\n                if (v1.validate.max !== undefined) {\n                  if (value.length > v1.validate.max) campo = {\n                    id: v1.column,\n                    message: \"O Campo \" + v1.label + \", tamanho m\\xE1ximo de \" + v1.validate.max + \" caracteres ex\\xEAdido\"\n                  };\n                }\n\n                if (v1.validate.min !== undefined) {\n                  if (value.length < v1.validate.min) campo = {\n                    id: v1.column,\n                    message: \"O Campo \" + v1.label + \", tamanho minimo de \" + v1.validate.min + \" caracteres.\"\n                  };\n                }\n\n                if (v1.validate.required !== undefined) {\n                  if (value.length == 0) campo = {\n                    id: v1.column,\n                    message: \"O Campo \" + v1.label + \" \\xE9 obrigat\\xF3rio\"\n                  };\n                }\n              }\n\n              if (value == \"Selecione\") {\n                campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" \\xE9 inv\\xE1lido \"\n                };\n              }\n\n              if (v1.validateHandler !== undefined) {\n                if (v1.validateHandler(value) == false) campo = {\n                  id: v1.column,\n                  message: \"O Campo \" + v1.label + \" n\\xE3o possui \\xE9 inv\\xE1lido \"\n                };\n              }\n            }\n          });\n        });\n        campo !== undefined ? _this2.props.setSnackbar({\n          open: true,\n          message: campo.message\n        }) : '';\n        return campo === undefined ? true : false;\n      };\n\n      var flexBasis = '22%';\n      var forms = !this.state.driver ? [] : [{\n        title: 'Dados Básicos',\n        fields: [{\n          column: 'cpf_cnpj',\n          label: 'CPF',\n          value: this.state.driver['cpf_cnpj'],\n          type: 'text',\n          mask: InputCpf,\n          validate: {\n            min: 11,\n            number: true,\n            required: true\n          },\n          validateHandler: validaCpf,\n          flexBasis: '12%',\n          helperText: \"o valor digitado é inválido\"\n        }, {\n          column: 'cnh',\n          label: 'Tipo de CNH',\n          type: 'select',\n          validate: {\n            required: true\n          },\n          values: [\"A\", \"B\", \"C\", \"D\", \"E\", \"AB\"],\n          value: this.state.driver['cnh'],\n          flexBasis: flexBasis\n        }, {\n          column: 'fullname',\n          label: 'Nome',\n          type: 'text',\n          validate: {\n            max: 50,\n            required: true\n          },\n          value: this.state.driver['fullname'],\n          flexBasis: flexBasis\n        }, {\n          column: 'mob_phone',\n          label: 'Celular',\n          type: 'text',\n          mask: InputPhone,\n          validate: {\n            max: 15,\n            required: true\n          },\n          value: this.state.driver['mob_phone'],\n          flexBasis: flexBasis\n        }, {\n          column: 'file_cnh',\n          label: 'Anexar CNH',\n          file: this.state.driver['file_cnh'] ? this.state.driver['files_cnh'].name : '',\n          type: 'file',\n          flexBasis: '15%',\n          style: {\n            maxWidth: '180'\n          }\n        }, {\n          column: 'phone',\n          label: 'Telefone',\n          type: 'text',\n          mask: InputPhone,\n          validate: {\n            max: 15,\n            required: true\n          },\n          value: this.state.driver['phone'],\n          flexBasis: flexBasis\n        }, {\n          column: 'email',\n          label: 'E-mail',\n          type: 'email',\n          validate: {\n            max: 100\n          },\n          validateHandler: validaEmail,\n          value: this.state.driver['email'],\n          flexBasis: flexBasis\n        }, {\n          column: 'birthdate',\n          label: 'Data de nascimento',\n          type: 'date',\n          validate: {\n            required: true\n          },\n          validateHandler: isFutureData,\n          flexBasis: flexBasis,\n          value: this.state.driver['birthdate'],\n          style: {\n            maxWidth: '210px'\n          }\n        }, {\n          column: 'file_crlv',\n          label: 'Anexar CRLV',\n          file: this.state.driver['file_crlv'] ? this.state.driver['files_crlv'].name : '',\n          type: 'file',\n          flexBasis: '15%',\n          style: {\n            maxWidth: '180'\n          }\n        }]\n      }, {\n        id: 'addr',\n        title: 'Endereço',\n        fields: [{\n          column: 'zipcode',\n          label: 'CEP',\n          type: 'text',\n          mask: InputCep,\n          validate: {\n            max: 9,\n            required: true\n          },\n          flexBasis: '9%',\n          value: this.state.driver['addresses'].zipcode\n        }, {\n          column: 'street',\n          label: 'Endereço',\n          validate: {\n            max: 100,\n            required: true\n          },\n          type: 'text',\n          flexBasis: flexBasis,\n          value: this.state.driver['addresses'].street\n        }, {\n          column: 'number',\n          label: 'Número',\n          type: 'number',\n          validate: {\n            number: true,\n            required: true\n          },\n          value: this.state.driver['addresses'].number,\n          flexBasis: '9%'\n        }, {\n          column: 'additional',\n          label: 'Complemento',\n          type: 'text',\n          flexBasis: '10%',\n          value: this.state.driver['addresses'].additional\n        }, {\n          column: 'uf',\n          label: 'Estado',\n          type: 'select',\n          values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\n          value: this.state.driver['addresses'].uf,\n          flexBasis: flexBasis,\n          flexGrow: 2,\n          style: {\n            minWidth: \"192px\"\n          }\n        }, {\n          column: 'city',\n          label: 'Cidade',\n          type: 'text',\n          validate: {\n            max: 100,\n            required: true\n          },\n          flexBasis: flexBasis,\n          value: this.state.driver['addresses'].city\n        }]\n      }];\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          padding: 10,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, React.createElement(HomeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }\n      }), \"  \", React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 39\n        }\n      }, \"Editar / Colaboradores\"))), React.createElement(LForms, {\n        forms: forms,\n        request: function request(data) {\n          _request(_this2.state.driver, data);\n        },\n        validate: function validate(values) {\n          return validateFields(forms, values);\n        },\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }), this.state.driver === \"maou\" && React.createElement(Paper, {\n        style: {\n          marginTop: 10,\n          marginBottom: 10,\n          padding: 15,\n          height: window.innerWidth < 768 ? 210 : 90\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          float: 'left',\n          maxWidth: 350\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }\n      }, React.createElement(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }\n      }, \"Data de cadastro:  \", React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 52\n        }\n      }, stringToaddDate(this.state.driver.created_at, 'DD/MM/YYYY', {\n        qtd: 1,\n        period: 'days'\n      })), \"\\xA0\"), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }\n      }, \"\\xDAltima altera\\xE7\\xE3o:  \", React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 52\n        }\n      }, stringToaddDate(this.state.driver.updated_at, 'DD/MM/YYYY', {\n        qtd: 1,\n        period: 'days'\n      })))), React.createElement(\"div\", {\n        style: {\n          float: 'left',\n          maxWidth: 350\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }, React.createElement(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      }, \"Id:  \", React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 38\n        }\n      }, this.state.driver.id)), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }\n      }, \"Usu\\xE1rio:  \", React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 43\n        }\n      }, this.state.driver.user.name)))));\n    }\n  }]);\n\n  return EditDrivers;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    session: store.authReducer.data,\n    snackbar: store.appReducer.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSnackbar: setSnackbar\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditDrivers));","map":{"version":3,"sources":["C:/Users/Maou/Documents/Projetos/CLIENTES/RNF/MitWay/completo/client/src/pages/Motoristas/edit/index.js"],"names":["React","Component","Fragment","connect","bindActionCreators","withRouter","AppBar","Paper","HomeIcon","Typography","Snackbar","LForms","setSnackbar","putApiDrivers","getAddressByCepla","getApiDrivers","validaEmail","validaCpf","stringToaddDate","isFutureData","InputCep","InputCpf","InputPhone","Redirect","withSnackbar","EditDrivers","state","driver","undefined","loading","props","match","params","id","setState","closeSnack","event","reason","open","message","request","data","addresses","contacts","response","success","errors","messages","console","log","Object","keys","map","err","field","toUpperCase","validateFields","fields","values","campo","reverse","v","k","v1","k1","column","value","validate","number","test","label","max","length","min","required","validateHandler","flexBasis","forms","title","type","mask","helperText","file","name","style","maxWidth","zipcode","street","additional","uf","flexGrow","minWidth","city","padding","marginTop","marginBottom","height","window","innerWidth","float","created_at","qtd","period","updated_at","user","mapStateToProps","store","session","authReducer","snackbar","appReducer","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP;AAEA,SAASC,WAAT;AACA,SAASC,aAAT,EAAwBC,iBAAxB,EAA2CC,aAA3C;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,eAAjC,EAAkDC,YAAlD;AAEA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA8B,WAA9B;;IACMC,W;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAEC,SADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,K;;;;;;WAIR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACuBd,aAAa,CAAC,EAAD,EAAK,KAAKe,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7B,CADpC;;AAAA;AACQN,cAAAA,MADR;AAEI,mBAAKO,QAAL,iCAAmB,KAAKR,KAAxB;AAA+BC,gBAAAA,MAAM,EAANA;AAA/B;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAMA,kBAAS;AAAA;;AACL,UAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAClC,YAAIA,MAAM,KAAK,WAAf,EAA4B;AACxB;AACH;;AACD,QAAA,MAAI,CAACP,KAAL,CAAWlB,WAAX,CAAuB;AAAE0B,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,OAAO,EAAE;AAAxB,SAAvB;AACH,OALD;;AAMA,UAAMC,QAAO,GAAG,SAAVA,OAAU,CAAOd,KAAP,EAAce,IAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZ,gBAAA,MAAI,CAACP,QAAL,iCAAmB,MAAI,CAACR,KAAxB;AAA+BG,kBAAAA,OAAO,EAAE;AAAxC;;AACA,gBAAA,MAAI,CAACC,KAAL,CAAWlB,WAAX,CAAuB;AAAE0B,kBAAAA,IAAI,EAAE,IAAR;AAAcC,kBAAAA,OAAO,EAAE;AAAvB,iBAAvB;;AAOAE,gBAAAA,IAAI,GAAG,SAAc,EAAd,EAAiBf,KAAK,CAACgB,SAAvB,EAAiCD,IAAjC,CAAP;AACAA,gBAAAA,IAAI,GAAG,SAAc,EAAd,EAAiBf,KAAK,CAACiB,QAAvB,EAAgCF,IAAhC,CAAP;AACAA,gBAAAA,IAAI,GAAG,SAAc,EAAd,EAAiBf,KAAjB,EAAuBe,IAAvB,CAAP;AACA,uBAAOA,IAAI,CAACC,SAAZ;AACA,uBAAOD,IAAI,CAACE,QAAZ;AAbY;AAAA,iDAcS9B,aAAa,CAAC,MAAI,CAACiB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,EAA6BQ,IAA7B,CAdtB;;AAAA;AAcRG,gBAAAA,QAdQ;;AAgBZ,oBAAIA,QAAQ,CAACH,IAAT,CAAcI,OAAlB,EAA2B;AACvB,kBAAA,MAAI,CAACf,KAAL,CAAWlB,WAAX,CAAuB;AAAE0B,oBAAAA,IAAI,EAAE,IAAR;AAAcC,oBAAAA,OAAO,EAAEK,QAAQ,CAACH,IAAT,CAAcF;AAArC,mBAAvB;;AACA,kBAAA,MAAI,CAACL,QAAL,iCAAmB,MAAI,CAACR,KAAxB;AAA+BG,oBAAAA,OAAO,EAAE;AAAxC;AAEH,iBAJD,MAIO;AACCiB,kBAAAA,MADD,qBACUF,QAAQ,CAACH,IADnB,6BAC2Bb,SAD3B;AAECmB,kBAAAA,QAFD,GAEY,EAFZ;AAGHC,kBAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,sBAAGA,MAAM,KAAKlB,SAAX,IAAwBkB,MAAM,CAACL,IAAP,KAAgBb,SAAxC,IAAqDkB,MAAM,CAACL,IAAP,CAAYG,QAAZ,KAAyBhB,SAA9E,IAA4FkB,MAAM,CAACL,IAAP,CAAYG,QAAZ,CAAqBH,IAArB,CAA0BK,MAA1B,KAAqClB,SAApI,EAA8I;AAC1IsB,oBAAAA,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACF,QAAP,CAAgBH,IAAhB,CAAqBK,MAAjC,EAAyCM,GAAzC,CAA6C,UAAAC,GAAG,EAAI;AAChDL,sBAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,0BAAIC,KAAK,GAAGD,GAAG,IAAI,MAAP,GAAgB,OAAhB,GAA0BA,GAAtC;AACAN,sBAAAA,QAAQ,iBAAeO,KAAK,CAACC,WAAN,EAAf,SAAsCT,MAAM,CAACF,QAAP,CAAgBH,IAAhB,CAAqBK,MAArB,CAA4BO,GAA5B,EAAiC,CAAjC,CAAtC,QAAR;AACH,qBAJD;AAKH,mBAND,MAMM;AACFN,oBAAAA,QAAQ,GAAG,sCAAX;AACH;;AACD,kBAAA,MAAI,CAACb,QAAL,iCAAmB,MAAI,CAACR,KAAxB;AAA+BG,oBAAAA,OAAO,EAAE;AAAxC;;AAEA,kBAAA,MAAI,CAACC,KAAL,CAAWlB,WAAX,CAAuB;AAAE0B,oBAAAA,IAAI,EAAE,IAAR;AAAcS,oBAAAA,QAAQ,EAARA;AAAd,mBAAvB;AACH;;AApCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAhB;;AAuCA,UAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAASC,MAAT,EAAoB;AACvC,YAAIC,KAAK,GAAG/B,SAAZ;AACA6B,QAAAA,MAAM,CAACG,OAAP,GAAiBR,GAAjB,CAAqB,UAACS,CAAD,EAAIC,CAAJ,EAAU;AAC3BD,UAAAA,CAAC,CAACJ,MAAF,CAASG,OAAT,GAAmBR,GAAnB,CAAuB,UAACW,EAAD,EAAKC,EAAL,EAAY;AAC/B,gBAAIN,MAAM,CAACK,EAAE,CAACE,MAAJ,CAAN,KAAsBrC,SAA1B,EAAqC;AACjC,kBAAIsC,KAAK,GAAGR,MAAM,CAACK,EAAE,CAACE,MAAJ,CAAlB;;AACA,kBAAIF,EAAE,CAACI,QAAH,KAAgBvC,SAApB,EAA+B;AAC3B,oBAAImC,EAAE,CAACI,QAAH,CAAYC,MAAZ,KAAuBxC,SAA3B,EAAsC;AAClC,sBAAI,YAAYyC,IAAZ,CAAiBH,KAAjB,KAA2B,KAA/B,EACIP,KAAK,GAAG;AAAE1B,oBAAAA,EAAE,EAAE8B,EAAE,CAACE,MAAT;AAAiB1B,oBAAAA,OAAO,eAAawB,EAAE,CAACO,KAAhB;AAAxB,mBAAR;AACP;;AAED,oBAAIP,EAAE,CAACI,QAAH,CAAYI,GAAZ,KAAoB3C,SAAxB,EAAmC;AAC/B,sBAAIsC,KAAK,CAACM,MAAN,GAAeT,EAAE,CAACI,QAAH,CAAYI,GAA/B,EACIZ,KAAK,GAAG;AAAE1B,oBAAAA,EAAE,EAAE8B,EAAE,CAACE,MAAT;AAAiB1B,oBAAAA,OAAO,eAAawB,EAAE,CAACO,KAAhB,+BAA4CP,EAAE,CAACI,QAAH,CAAYI,GAAxD;AAAxB,mBAAR;AACP;;AAED,oBAAIR,EAAE,CAACI,QAAH,CAAYM,GAAZ,KAAoB7C,SAAxB,EAAmC;AAC/B,sBAAIsC,KAAK,CAACM,MAAN,GAAeT,EAAE,CAACI,QAAH,CAAYM,GAA/B,EACId,KAAK,GAAG;AAAE1B,oBAAAA,EAAE,EAAE8B,EAAE,CAACE,MAAT;AAAiB1B,oBAAAA,OAAO,eAAawB,EAAE,CAACO,KAAhB,4BAA4CP,EAAE,CAACI,QAAH,CAAYM,GAAxD;AAAxB,mBAAR;AACP;;AAED,oBAAIV,EAAE,CAACI,QAAH,CAAYO,QAAZ,KAAyB9C,SAA7B,EAAwC;AACpC,sBAAIsC,KAAK,CAACM,MAAN,IAAgB,CAApB,EACIb,KAAK,GAAG;AAAE1B,oBAAAA,EAAE,EAAE8B,EAAE,CAACE,MAAT;AAAiB1B,oBAAAA,OAAO,eAAawB,EAAE,CAACO,KAAhB;AAAxB,mBAAR;AACP;AACJ;;AACD,kBAAGJ,KAAK,IAAI,WAAZ,EAAwB;AACpBP,gBAAAA,KAAK,GAAG;AAAC1B,kBAAAA,EAAE,EAAE8B,EAAE,CAACE,MAAR;AAAgB1B,kBAAAA,OAAO,eAAawB,EAAE,CAACO,KAAhB;AAAvB,iBAAR;AACH;;AAED,kBAAIP,EAAE,CAACY,eAAH,KAAuB/C,SAA3B,EAAsC;AAClC,oBAAImC,EAAE,CAACY,eAAH,CAAmBT,KAAnB,KAA6B,KAAjC,EACIP,KAAK,GAAG;AAAE1B,kBAAAA,EAAE,EAAE8B,EAAE,CAACE,MAAT;AAAiB1B,kBAAAA,OAAO,eAAawB,EAAE,CAACO,KAAhB;AAAxB,iBAAR;AACP;AACJ;AACJ,WAjCD;AAkCH,SAnCD;AAqCAX,QAAAA,KAAK,KAAK/B,SAAV,GAAsB,MAAI,CAACE,KAAL,CAAWlB,WAAX,CAAuB;AAAE0B,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,OAAO,EAAEoB,KAAK,CAACpB;AAA7B,SAAvB,CAAtB,GAAsF,EAAtF;AAEA,eAAOoB,KAAK,KAAK/B,SAAV,GAAsB,IAAtB,GAA6B,KAApC;AACH,OA1CD;;AA2CA,UAAMgD,SAAS,GAAG,KAAlB;AACA,UAAMC,KAAK,GAAG,CAAC,KAAKnD,KAAL,CAAWC,MAAZ,GAAqB,EAArB,GAA0B,CACpC;AACImD,QAAAA,KAAK,EAAE,eADX;AAEIrB,QAAAA,MAAM,EAAE,CACJ;AAAEQ,UAAAA,MAAM,EAAE,UAAV;AAAsBK,UAAAA,KAAK,EAAE,KAA7B;AAAoCJ,UAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,UAAlB,CAA3C;AAA0EoD,UAAAA,IAAI,EAAE,MAAhF;AAAwFC,UAAAA,IAAI,EAAE3D,QAA9F;AAAwG8C,UAAAA,QAAQ,EAAE;AAACM,YAAAA,GAAG,EAAE,EAAN;AAAUL,YAAAA,MAAM,EAAE,IAAlB;AAAwBM,YAAAA,QAAQ,EAAE;AAAlC,WAAlH;AAA0JC,UAAAA,eAAe,EAAE1D,SAA3K;AAAsL2D,UAAAA,SAAS,EAAE,KAAjM;AAAwMK,UAAAA,UAAU,EAAE;AAApN,SADI,EAEJ;AAAEhB,UAAAA,MAAM,EAAE,KAAV;AAAiBK,UAAAA,KAAK,EAAE,aAAxB;AAAuCS,UAAAA,IAAI,EAAE,QAA7C;AAAuDZ,UAAAA,QAAQ,EAAE;AAACO,YAAAA,QAAQ,EAAE;AAAX,WAAjE;AACAhB,UAAAA,MAAM,EAAC,CACH,GADG,EACE,GADF,EACO,GADP,EACY,GADZ,EACiB,GADjB,EACsB,IADtB,CADP;AAGGQ,UAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,KAAlB,CAHV;AAGmCiD,UAAAA,SAAS,EAATA;AAHnC,SAFI,EAMJ;AAAEX,UAAAA,MAAM,EAAE,UAAV;AAAsBK,UAAAA,KAAK,EAAE,MAA7B;AAAqCS,UAAAA,IAAI,EAAE,MAA3C;AAAmDZ,UAAAA,QAAQ,EAAE;AAACI,YAAAA,GAAG,EAAE,EAAN;AAAUG,YAAAA,QAAQ,EAAE;AAApB,WAA7D;AAAwFR,UAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,UAAlB,CAA/F;AAA8HiD,UAAAA,SAAS,EAATA;AAA9H,SANI,EAOJ;AAAEX,UAAAA,MAAM,EAAE,WAAV;AAAuBK,UAAAA,KAAK,EAAE,SAA9B;AAAyCS,UAAAA,IAAI,EAAE,MAA/C;AAAuDC,UAAAA,IAAI,EAAE1D,UAA7D;AAAyE6C,UAAAA,QAAQ,EAAE;AAAEI,YAAAA,GAAG,EAAE,EAAP;AAAWG,YAAAA,QAAQ,EAAE;AAArB,WAAnF;AAAgHR,UAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,WAAlB,CAAvH;AAAuJiD,UAAAA,SAAS,EAATA;AAAvJ,SAPI,EAQJ;AAAEX,UAAAA,MAAM,EAAE,UAAV;AAAsBK,UAAAA,KAAK,EAAE,YAA7B;AAA2CY,UAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWC,MAAX,CAAkB,UAAlB,IAAgC,KAAKD,KAAL,CAAWC,MAAX,CAAkB,WAAlB,EAA+BwD,IAA/D,GAAsE,EAAvH;AAA2HJ,UAAAA,IAAI,EAAE,MAAjI;AAAyIH,UAAAA,SAAS,EAAC,KAAnJ;AAA0JQ,UAAAA,KAAK,EAAC;AAACC,YAAAA,QAAQ,EAAE;AAAX;AAAhK,SARI,EASJ;AAAEpB,UAAAA,MAAM,EAAE,OAAV;AAAmBK,UAAAA,KAAK,EAAE,UAA1B;AAAsCS,UAAAA,IAAI,EAAE,MAA5C;AAAoDC,UAAAA,IAAI,EAAE1D,UAA1D;AAAsE6C,UAAAA,QAAQ,EAAE;AAAEI,YAAAA,GAAG,EAAE,EAAP;AAAWG,YAAAA,QAAQ,EAAE;AAArB,WAAhF;AAA6GR,UAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,OAAlB,CAApH;AAAgJiD,UAAAA,SAAS,EAATA;AAAhJ,SATI,EAUJ;AAAEX,UAAAA,MAAM,EAAE,OAAV;AAAmBK,UAAAA,KAAK,EAAE,QAA1B;AAAoCS,UAAAA,IAAI,EAAE,OAA1C;AAAmDZ,UAAAA,QAAQ,EAAE;AAAEI,YAAAA,GAAG,EAAE;AAAP,WAA7D;AAA2EI,UAAAA,eAAe,EAAE3D,WAA5F;AAAyGkD,UAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,OAAlB,CAAhH;AAA4IiD,UAAAA,SAAS,EAATA;AAA5I,SAVI,EAWJ;AAAEX,UAAAA,MAAM,EAAE,WAAV;AAAuBK,UAAAA,KAAK,EAAE,oBAA9B;AAAoDS,UAAAA,IAAI,EAAE,MAA1D;AAAkEZ,UAAAA,QAAQ,EAAE;AAACO,YAAAA,QAAQ,EAAE;AAAX,WAA5E;AAA8FC,UAAAA,eAAe,EAAExD,YAA/G;AAA6HyD,UAAAA,SAAS,EAATA,SAA7H;AAAwIV,UAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,WAAlB,CAA/I;AAA+KyD,UAAAA,KAAK,EAAC;AAACC,YAAAA,QAAQ,EAAE;AAAX;AAArL,SAXI,EAaJ;AAAEpB,UAAAA,MAAM,EAAE,WAAV;AAAuBK,UAAAA,KAAK,EAAE,aAA9B;AAA6CY,UAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWC,MAAX,CAAkB,WAAlB,IAAiC,KAAKD,KAAL,CAAWC,MAAX,CAAkB,YAAlB,EAAgCwD,IAAjE,GAAwE,EAA3H;AAA+HJ,UAAAA,IAAI,EAAE,MAArI;AAA6IH,UAAAA,SAAS,EAAC,KAAvJ;AAA8JQ,UAAAA,KAAK,EAAC;AAACC,YAAAA,QAAQ,EAAE;AAAX;AAApK,SAbI;AAFZ,OADoC,EAqBpC;AACIpD,QAAAA,EAAE,EAAE,MADR;AAEI6C,QAAAA,KAAK,EAAE,UAFX;AAKIrB,QAAAA,MAAM,EAAE,CACJ;AAAEQ,UAAAA,MAAM,EAAE,SAAV;AAAqBK,UAAAA,KAAK,EAAE,KAA5B;AAAmCS,UAAAA,IAAI,EAAE,MAAzC;AAAiDC,UAAAA,IAAI,EAAE5D,QAAvD;AAAiE+C,UAAAA,QAAQ,EAAE;AAAEI,YAAAA,GAAG,EAAE,CAAP;AAAUG,YAAAA,QAAQ,EAAE;AAApB,WAA3E;AAAuGE,UAAAA,SAAS,EAAE,IAAlH;AAAwHV,UAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,WAAlB,EAA+B2D;AAA9J,SADI,EAEJ;AAAErB,UAAAA,MAAM,EAAE,QAAV;AAAoBK,UAAAA,KAAK,EAAE,UAA3B;AAAuCH,UAAAA,QAAQ,EAAE;AAAEI,YAAAA,GAAG,EAAE,GAAP;AAAYG,YAAAA,QAAQ,EAAE;AAAtB,WAAjD;AAA+EK,UAAAA,IAAI,EAAE,MAArF;AAA6FH,UAAAA,SAAS,EAATA,SAA7F;AAAwGV,UAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,WAAlB,EAA+B4D;AAA9I,SAFI,EAGJ;AAAEtB,UAAAA,MAAM,EAAE,QAAV;AAAoBK,UAAAA,KAAK,EAAE,QAA3B;AAAqCS,UAAAA,IAAI,EAAE,QAA3C;AAAqDZ,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,MAAM,EAAE,IAAV;AAAgBM,YAAAA,QAAQ,EAAE;AAA1B,WAA/D;AAAiGR,UAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,WAAlB,EAA+ByC,MAAvI;AAA+IQ,UAAAA,SAAS,EAAE;AAA1J,SAHI,EAIJ;AAAEX,UAAAA,MAAM,EAAE,YAAV;AAAwBK,UAAAA,KAAK,EAAE,aAA/B;AAA8CS,UAAAA,IAAI,EAAE,MAApD;AAA4DH,UAAAA,SAAS,EAAC,KAAtE;AAA6EV,UAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,WAAlB,EAA+B6D;AAAnH,SAJI,EAKJ;AACIvB,UAAAA,MAAM,EAAE,IADZ;AACkBK,UAAAA,KAAK,EAAE,QADzB;AACmCS,UAAAA,IAAI,EAAE,QADzC;AAEIrB,UAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,UAApB,EAAgC,OAAhC,EAAyC,OAAzC,EAAkD,OAAlD,EAA2D,UAA3D,EAAuE,gBAAvE,EAAyF,OAAzF,EAAkG,UAAlG,EAA8G,cAA9G,EAA8H,oBAA9H,EAAoJ,aAApJ,EAAmK,MAAnK,EAA2K,SAA3K,EAAsL,YAAtL,EAAoM,OAApM,EAA6M,QAA7M,EAAuN,gBAAvN,EAAyO,qBAAzO,EAAgQ,UAAhQ,EAA4Q,SAA5Q,EAAuR,mBAAvR,EAA4S,gBAA5S,EAA8T,SAA9T,EAAyU,WAAzU,EAAsV,WAAtV,CAFZ;AAGIQ,UAAAA,KAAK,EAAC,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,WAAlB,EAA+B8D,EAHzC;AAG6Cb,UAAAA,SAAS,EAATA,SAH7C;AAGwDc,UAAAA,QAAQ,EAAE,CAHlE;AAGqEN,UAAAA,KAAK,EAAE;AAAEO,YAAAA,QAAQ,EAAE;AAAZ;AAH5E,SALI,EAUJ;AAAE1B,UAAAA,MAAM,EAAE,MAAV;AAAkBK,UAAAA,KAAK,EAAE,QAAzB;AAAmCS,UAAAA,IAAI,EAAE,MAAzC;AAAiDZ,UAAAA,QAAQ,EAAE;AAAEI,YAAAA,GAAG,EAAE,GAAP;AAAYG,YAAAA,QAAQ,EAAE;AAAtB,WAA3D;AAAyFE,UAAAA,SAAS,EAATA,SAAzF;AAAoGV,UAAAA,KAAK,EAAC,KAAKxC,KAAL,CAAWC,MAAX,CAAkB,WAAlB,EAA+BiE;AAAzI,SAVI;AALZ,OArBoC,CAAxC;AAyCA,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAA0B,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,EAAX;AAAeC,UAAAA,SAAS,EAAE,EAA1B;AAA8BC,UAAAA,YAAY,EAAE;AAA5C,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,QACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADlB,CADJ,CADJ,EAOQ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAElB,KAAf;AACI,QAAA,OAAO,EAAE,iBAACpC,IAAD,EAAU;AAACD,UAAAA,QAAO,CAAC,MAAI,CAACd,KAAL,CAAWC,MAAZ,EAAmBc,IAAnB,CAAP;AAAgC,SADxD;AAEI,QAAA,QAAQ,EAAE,kBAACiB,MAAD,EAAY;AAAE,iBAAOF,cAAc,CAACqB,KAAD,EAAQnB,MAAR,CAArB;AAAsC,SAFlE;AAGI,QAAA,OAAO,EAAE,KAAKhC,KAAL,CAAWG,OAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPR,EAaM,KAAKH,KAAL,CAAWC,MAAX,KAAsB,MAAtB,IACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAEmE,UAAAA,SAAS,EAAE,EAAb;AAAiBC,UAAAA,YAAY,EAAE,EAA/B;AAAmCF,UAAAA,OAAO,EAAE,EAA5C;AAAgDG,UAAAA,MAAM,EAAEC,MAAM,CAACC,UAAP,GAAoB,GAApB,GAA0B,GAA1B,GAAgC;AAAxF,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBd,UAAAA,QAAQ,EAAE;AAA3B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAE;AAAEQ,UAAAA,OAAO,EAAE;AAAX,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI3E,eAAe,CAAC,KAAKQ,KAAL,CAAWC,MAAX,CAAkByE,UAAnB,EAA+B,YAA/B,EAA6C;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,MAAM,EAAE;AAAlB,OAA7C,CAAnB,CADvB,SADJ,EAII,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAE;AAAET,UAAAA,OAAO,EAAE;AAAX,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI3E,eAAe,CAAC,KAAKQ,KAAL,CAAWC,MAAX,CAAkB4E,UAAnB,EAA+B,YAA/B,EAA6C;AAAEF,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,MAAM,EAAE;AAAlB,OAA7C,CAAnB,CADvB,CAJJ,CADJ,EASI;AAAK,QAAA,KAAK,EAAE;AAAEH,UAAAA,KAAK,EAAE,MAAT;AAAiBd,UAAAA,QAAQ,EAAE;AAA3B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAE;AAAEQ,UAAAA,OAAO,EAAE;AAAX,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKnE,KAAL,CAAWC,MAAX,CAAkBM,EAAtB,CADT,CADJ,EAII,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAE;AAAE4D,UAAAA,OAAO,EAAE;AAAX,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKnE,KAAL,CAAWC,MAAX,CAAkB6E,IAAlB,CAAuBrB,IAA3B,CADd,CAJJ,CATJ,CAdR,CADJ;AAoCH;;;;EAlLqBlF,S;;AAoL1B,IAAMwG,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,OAAO,EAAED,KAAK,CAACE,WAAN,CAAkBnE,IADG;AAE9BoE,IAAAA,QAAQ,EAAEH,KAAK,CAACI,UAAN,CAAiBD;AAFG,GAAL;AAAA,CAA7B;;AAIA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAC/B5G,kBAAkB,CAAC;AAAEQ,IAAAA,WAAW,EAAXA;AAAF,GAAD,EAAkBoG,QAAlB,CADa;AAAA,CAAnC;;AAGA,eAAe3G,UAAU,CAACF,OAAO,CAACsG,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CtF,WAA7C,CAAD,CAAzB","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LForms from '../../../components/Forms';\r\n//\r\nimport { setSnackbar } from '../../../actions/appActions'\r\nimport { putApiDrivers, getAddressByCepla, getApiDrivers } from '../../../providers/api'\r\nimport { validaEmail, validaCpf, stringToaddDate, isFutureData } from '../../../providers/commonMethods'\r\n\r\nimport { InputCep, InputCpf, InputPhone } from '../../../providers/masks'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withSnackbar  } from 'notistack';\r\nclass EditDrivers extends Component {\r\n    state = {\r\n        driver: undefined,\r\n        loading: false\r\n    }\r\n    async componentDidMount() {\r\n        let driver = await getApiDrivers({}, this.props.match.params.id);\r\n        this.setState({ ...this.state, driver });\r\n\r\n    }\r\n\r\n    render() {\r\n        const closeSnack = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n                return;\r\n            }\r\n            this.props.setSnackbar({ open: false, message: \"\" });\r\n        };\r\n        const request = async (state, data) => {\r\n            this.setState({ ...this.state, loading: true });\r\n            this.props.setSnackbar({ open: true, message: \"Validando Dados, Aguarde ...\", });\r\n            //this.props.enqueueSnackbar(\"Validando Dados, Aguarde ...\", {variant: 'info'});\r\n            //let address = JSON.stringify(Object.assign({},JSON.parse(state.address),data.address));\r\n            //let contact = JSON.stringify(Object.assign({},JSON.parse(state.contact),data.contact));\r\n            //if (data.address) data.address = address;\r\n            //if (data.contact) data.contact = contact\r\n            //if (data.active) data.active = data.active == 'Ativo' ? 1 : 0;\r\n            data = Object.assign({},state.addresses,data);\r\n            data = Object.assign({},state.contacts,data);\r\n            data = Object.assign({},state,data);\r\n            delete data.addresses;\r\n            delete data.contacts;\r\n            let response = await putApiDrivers(this.props.match.params.id, data);\r\n            //console.log(response);\r\n            if (response.data.success) {\r\n                this.props.setSnackbar({ open: true, message: response.data.message });\r\n                this.setState({ ...this.state, loading: false });\r\n                //this.props.history.goBack();\r\n            } else {\r\n                let errors = response.data ?? undefined;\r\n                let messages = '';\r\n                console.log(errors)\r\n                if(errors !== undefined && errors.data !== undefined && errors.data.response !== undefined  && errors.data.response.data.errors !== undefined){\r\n                    Object.keys(errors.response.data.errors).map(err => {\r\n                        console.log(err);\r\n                        let field = err == \"file\" ? \"Anexo\" : err\r\n                        messages += `O campo ${field.toUpperCase()} ${errors.response.data.errors[err][0]} \\n`;\r\n                    })\r\n                } else{\r\n                    messages = 'Houve um problema em sua requisição!'\r\n                }\r\n                this.setState({ ...this.state, loading: false });\r\n                //response.data.error.response.data.errors\r\n                this.props.setSnackbar({ open: true, messages});\r\n            }\r\n\r\n        }\r\n        const validateFields = (fields, values) => {\r\n            let campo = undefined;\r\n            fields.reverse().map((v, k) => {\r\n                v.fields.reverse().map((v1, k1) => {\r\n                    if (values[v1.column] !== undefined) {\r\n                        let value = values[v1.column];\r\n                        if (v1.validate !== undefined) {\r\n                            if (v1.validate.number !== undefined) {\r\n                                if (/^[-]?\\d+$/.test(value) == false)\r\n                                    campo = { id: v1.column, message: `O Campo ${v1.label} é somente números ` }\r\n                            }\r\n\r\n                            if (v1.validate.max !== undefined) {\r\n                                if (value.length > v1.validate.max)\r\n                                    campo = { id: v1.column, message: `O Campo ${v1.label}, tamanho máximo de ${v1.validate.max} caracteres exêdido` };\r\n                            }\r\n\r\n                            if (v1.validate.min !== undefined) {\r\n                                if (value.length < v1.validate.min)\r\n                                    campo = { id: v1.column, message: `O Campo ${v1.label}, tamanho minimo de ${v1.validate.min} caracteres.` };\r\n                            }\r\n\r\n                            if (v1.validate.required !== undefined) {\r\n                                if (value.length == 0)\r\n                                    campo = { id: v1.column, message: `O Campo ${v1.label} é obrigatório` };\r\n                            }\r\n                        }\r\n                        if(value == \"Selecione\"){\r\n                            campo = {id: v1.column, message: `O Campo ${v1.label} é inválido ` }\r\n                        }\r\n\r\n                        if (v1.validateHandler !== undefined) {\r\n                            if (v1.validateHandler(value) == false)\r\n                                campo = { id: v1.column, message: `O Campo ${v1.label} não possui é inválido ` }\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            //console.log(campo)\r\n            campo !== undefined ? this.props.setSnackbar({ open: true, message: campo.message}) : '';\r\n\r\n            return campo === undefined ? true : false\r\n        }\r\n        const flexBasis = '22%';\r\n        const forms = !this.state.driver ? [] : [\r\n            {\r\n                title: 'Dados Básicos',\r\n                fields: [\r\n                    { column: 'cpf_cnpj', label: 'CPF', value: this.state.driver['cpf_cnpj'], type: 'text', mask: InputCpf, validate: {min: 11, number: true, required: true},validateHandler: validaCpf, flexBasis: '12%', helperText: \"o valor digitado é inválido\" },\r\n                    { column: 'cnh', label: 'Tipo de CNH', type: 'select', validate: {required: true}, \r\n                    values:[\r\n                        \"A\", \"B\", \"C\", \"D\", \"E\", \"AB\"\r\n                    ], value: this.state.driver['cnh'],flexBasis },\r\n                    { column: 'fullname', label: 'Nome', type: 'text', validate: {max: 50, required: true}, value: this.state.driver['fullname'], flexBasis },\r\n                    { column: 'mob_phone', label: 'Celular', type: 'text', mask: InputPhone, validate: { max: 15, required: true }, value: this.state.driver['mob_phone'], flexBasis},\r\n                    { column: 'file_cnh', label: 'Anexar CNH', file: this.state.driver['file_cnh'] ? this.state.driver['files_cnh'].name : '', type: 'file', flexBasis:'15%', style:{maxWidth: '180'} },\r\n                    { column: 'phone', label: 'Telefone', type: 'text', mask: InputPhone, validate: { max: 15, required: true }, value: this.state.driver['phone'], flexBasis},\r\n                    { column: 'email', label: 'E-mail', type: 'email', validate: { max: 100 }, validateHandler: validaEmail, value: this.state.driver['email'], flexBasis},\r\n                    { column: 'birthdate', label: 'Data de nascimento', type: 'date', validate: {required: true}, validateHandler: isFutureData, flexBasis, value: this.state.driver['birthdate'], style:{maxWidth: '210px'} },\r\n                    //\r\n                    { column: 'file_crlv', label: 'Anexar CRLV', file: this.state.driver['file_crlv'] ? this.state.driver['files_crlv'].name : '', type: 'file', flexBasis:'15%', style:{maxWidth: '180'} },\r\n                    \r\n                    //{ column: 'created_at', label: 'Data', type: 'date' },\r\n                ]\r\n            },\r\n            {\r\n                id: 'addr',\r\n                title: 'Endereço',\r\n                //flexFlow: 'row no-wrap',\r\n                //json: \"address\",\r\n                fields: [\r\n                    { column: 'zipcode', label: 'CEP', type: 'text', mask: InputCep, validate: { max: 9, required: true }, flexBasis: '9%', value: this.state.driver['addresses'].zipcode },\r\n                    { column: 'street', label: 'Endereço', validate: { max: 100, required: true }, type: 'text', flexBasis, value: this.state.driver['addresses'].street },\r\n                    { column: 'number', label: 'Número', type: 'number', validate: { number: true, required: true }, value: this.state.driver['addresses'].number, flexBasis: '9%'},\r\n                    { column: 'additional', label: 'Complemento', type: 'text', flexBasis:'10%', value: this.state.driver['addresses'].additional },\r\n                    {\r\n                        column: 'uf', label: 'Estado', type: 'select',\r\n                        values: [\"Acre\", \"Alagoas\", \"Amazonas\", \"Amapá\", \"Bahia\", \"Ceará\", \"Brasília\", \"Espírito Santo\", \"Goiás\", \"Maranhão\", \"Minas Gerais\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Pará\", \"Paraíba\", \"Pernambuco\", \"Piauí\", \"Paraná\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rondônia\", \"Roraima\", \"Rio Grande do Sul\", \"Santa Catarina\", \"Sergipe\", \"São Paulo\", \"Tocantins\"],\r\n                        value:this.state.driver['addresses'].uf, flexBasis, flexGrow: 2, style: { minWidth: \"192px\" }\r\n                    },\r\n                    { column: 'city', label: 'Cidade', type: 'text', validate: { max: 100, required: true }, flexBasis, value:this.state.driver['addresses'].city },\r\n                ]\r\n            },\r\n        ]\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" style={{ padding: 10, marginTop: 10, marginBottom: 10 }}>\r\n                    <Typography variant=\"h6\">\r\n                        <HomeIcon />  <span>Editar / Colaboradores</span>\r\n                    </Typography>\r\n                </AppBar>\r\n                {\r\n                    <LForms forms={forms}\r\n                        request={(data) => {request(this.state.driver,data)}}\r\n                        validate={(values) => { return validateFields(forms, values) }}\r\n                        loading={this.state.loading}\r\n                    />\r\n                }\r\n                { this.state.driver === \"maou\" &&\r\n                    <Paper style={{ marginTop: 10, marginBottom: 10, padding: 15, height: window.innerWidth < 768 ? 210 : 90 }}>\r\n                        <div style={{ float: 'left', maxWidth: 350 }}>\r\n                            <Typography variant=\"subtitle1\" style={{ padding: 10 }}>\r\n                                Data de cadastro:  <b>{stringToaddDate(this.state.driver.created_at, 'DD/MM/YYYY', { qtd: 1, period: 'days' })}</b>&nbsp;\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" style={{ padding: 10 }}>\r\n                                Última alteração:  <b>{stringToaddDate(this.state.driver.updated_at, 'DD/MM/YYYY', { qtd: 1, period: 'days' })}</b>\r\n                            </Typography>\r\n                        </div>\r\n                        <div style={{ float: 'left', maxWidth: 350 }}>\r\n                            <Typography variant=\"subtitle1\" style={{ padding: 10 }}>\r\n                                Id:  <b>{this.state.driver.id}</b>\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" style={{ padding: 10 }}>\r\n                                Usuário:  <b>{this.state.driver.user.name}</b>\r\n                            </Typography>\r\n                        </div>\r\n                    </Paper>\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => ({\r\n    session: store.authReducer.data,\r\n    snackbar: store.appReducer.snackbar\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ setSnackbar }, dispatch);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditDrivers))\r\n"]},"metadata":{},"sourceType":"module"}